name: Dev Deployment
on:
  workflow_dispatch:
  issue_comment:
    types: [created]

permissions:
  pull-requests: write
  deployments: write
  contents: write
  checks: read
  statuses: read

jobs:
  dev-deploy:
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: branch-deploy
        id: branch-deploy
        uses: github/branch-deploy@v11.0.0
        with:
          trigger: ".deploy"
          reaction: "eyes"
          environment: "development"
          stable_branch: "main"
          environment_urls: "production|disabled,development|https://dev-api.genji.pk,staging|disabled"
          environment_targets: "development"
          allow_forks: "true"
          admins: "tylovejoy,Aiapaec64"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.branch-deploy.outputs.sha }}

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_HOST_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add remote host to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.SERVER_HOST_IP }} >> ~/.ssh/known_hosts

      - name: Set up Docker context for dev
        run: |
          docker context create dev-server \
            --docker "host=ssh://${{ secrets.SERVER_HOST_USER }}@${{ secrets.SERVER_HOST_IP }}" \
            --description "Dev server context"
          docker context use dev-server

      - name: Deploy to Remote Dev Server
        run: |
          echo "Deploying to Dev Server..."

          docker compose -f docker-compose.dev.yml up -d --build --no-deps --force-recreate

        env:
          API_ENVIRONMENT: ${{ secrets.API_ENVIRONMENT }}
          DEFAULT_DSN: ${{ secrets.DEFAULT_DSN }}
          RABBITMQ_USER: ${{ secrets.RABBITMQ_USER }}
          RABBITMQ_PASS: ${{ secrets.RABBITMQ_PASS }}
          RABBITMQ_HOST: ${{ secrets.RABBITMQ_HOST }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          LUST_URL: ${{ secrets.LUST_URL }}
          IP_HASH_SECRET: ${{ secrets.IP_HASH_SECRET }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
